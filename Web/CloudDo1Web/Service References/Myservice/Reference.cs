//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudDo1Web.Myservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskCls", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.ServiceModels")]
    [System.SerializableAttribute()]
    public partial class TaskCls : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Active_StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CloudDo1Web.Myservice.TaskCls[] TaskListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Task_DesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Active_Status {
            get {
                return this.Active_StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.Active_StatusField, value) != true)) {
                    this.Active_StatusField = value;
                    this.RaisePropertyChanged("Active_Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentTimeField, value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CloudDo1Web.Myservice.TaskCls[] TaskList {
            get {
                return this.TaskListField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskListField, value) != true)) {
                    this.TaskListField = value;
                    this.RaisePropertyChanged("TaskList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Task_Des {
            get {
                return this.Task_DesField;
            }
            set {
                if ((object.ReferenceEquals(this.Task_DesField, value) != true)) {
                    this.Task_DesField = value;
                    this.RaisePropertyChanged("Task_Des");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Myservice.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        CloudDo1Web.Myservice.CompositeType GetDataUsingDataContract(CloudDo1Web.Myservice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<CloudDo1Web.Myservice.CompositeType> GetDataUsingDataContractAsync(CloudDo1Web.Myservice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Test", ReplyAction="http://tempuri.org/IService1/TestResponse")]
        string Test(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Test", ReplyAction="http://tempuri.org/IService1/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        string InsertUser(string Username, string Mailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        System.Threading.Tasks.Task<string> InsertUserAsync(string Username, string Mailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTask", ReplyAction="http://tempuri.org/IService1/InsertTaskResponse")]
        string InsertTask(string Task, string Task_Descriprtion, string Priority, string Time, int UserId, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTask", ReplyAction="http://tempuri.org/IService1/InsertTaskResponse")]
        System.Threading.Tasks.Task<string> InsertTaskAsync(string Task, string Task_Descriprtion, string Priority, string Time, int UserId, string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadTask", ReplyAction="http://tempuri.org/IService1/LoadTaskResponse")]
        CloudDo1Web.Myservice.TaskCls[] LoadTask(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadTask", ReplyAction="http://tempuri.org/IService1/LoadTaskResponse")]
        System.Threading.Tasks.Task<CloudDo1Web.Myservice.TaskCls[]> LoadTaskAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getuserbymail", ReplyAction="http://tempuri.org/IService1/GetuserbymailResponse")]
        int Getuserbymail(string Mailid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Getuserbymail", ReplyAction="http://tempuri.org/IService1/GetuserbymailResponse")]
        System.Threading.Tasks.Task<int> GetuserbymailAsync(string Mailid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CloudDo1Web.Myservice.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CloudDo1Web.Myservice.IService1>, CloudDo1Web.Myservice.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public CloudDo1Web.Myservice.CompositeType GetDataUsingDataContract(CloudDo1Web.Myservice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<CloudDo1Web.Myservice.CompositeType> GetDataUsingDataContractAsync(CloudDo1Web.Myservice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string Test(string value) {
            return base.Channel.Test(value);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(string value) {
            return base.Channel.TestAsync(value);
        }
        
        public string InsertUser(string Username, string Mailid) {
            return base.Channel.InsertUser(Username, Mailid);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserAsync(string Username, string Mailid) {
            return base.Channel.InsertUserAsync(Username, Mailid);
        }
        
        public string InsertTask(string Task, string Task_Descriprtion, string Priority, string Time, int UserId, string Status) {
            return base.Channel.InsertTask(Task, Task_Descriprtion, Priority, Time, UserId, Status);
        }
        
        public System.Threading.Tasks.Task<string> InsertTaskAsync(string Task, string Task_Descriprtion, string Priority, string Time, int UserId, string Status) {
            return base.Channel.InsertTaskAsync(Task, Task_Descriprtion, Priority, Time, UserId, Status);
        }
        
        public CloudDo1Web.Myservice.TaskCls[] LoadTask(int UserId) {
            return base.Channel.LoadTask(UserId);
        }
        
        public System.Threading.Tasks.Task<CloudDo1Web.Myservice.TaskCls[]> LoadTaskAsync(int UserId) {
            return base.Channel.LoadTaskAsync(UserId);
        }
        
        public int Getuserbymail(string Mailid) {
            return base.Channel.Getuserbymail(Mailid);
        }
        
        public System.Threading.Tasks.Task<int> GetuserbymailAsync(string Mailid) {
            return base.Channel.GetuserbymailAsync(Mailid);
        }
    }
}
